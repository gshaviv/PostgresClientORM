{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/intro","title":"Intro","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/children\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/postgresclientorm\/children\/init(oftype:by:sortby:order:)","title":"init(ofType: Child.Type, by: Child.Columns, sortBy: ColumnName?, order: Query<Child>.OrderBy)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/children\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/postgresclientorm\/children\/isloaded","title":"var isLoaded: Bool","type":"property"},{"path":"\/documentation\/postgresclientorm\/children\/loadedvalues","title":"var loadedValues: [Child]?","type":"property"},{"path":"\/documentation\/postgresclientorm\/children\/referencingcolumn","title":"let referencingColumn: Child.Columns","type":"property"},{"path":"\/documentation\/postgresclientorm\/children\/values","title":"var values: [Child]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/children\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/load(parentid:transaction:)","title":"func load(parentId: PostgresCodable, transaction: UUID?) async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/makeiterator()","title":"func makeIterator() -> Array<Child>.Iterator","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/reload(parentid:)","title":"func reload(parentId: PostgresCodable) async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/reset()","title":"func reset()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/children\/subscript(_:)","title":"subscript(Int) -> Child","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/children\/asynciterator","title":"Children.AsyncIterator","type":"typealias"},{"path":"\/documentation\/postgresclientorm\/children\/element","title":"Children.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/children\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/postgresclientorm\/children\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/postgresclientorm\/children\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/children\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/filter(_:)-1fv5s","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/filter(_:)-305zp","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/flatmap(_:)-4lm20","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/flatmap(_:)-8677v","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/joined(separator:)-391oz","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/joined(separator:)-tq8g","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/sorted(using:)-2yk9b","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/sorted(using:)-348fy","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/postgresclientorm\/children\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/postgresclientorm\/children\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/children","title":"Children","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/database\/execute(_:transaction:)","title":"func execute(String, transaction: UUID?) async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/database\/execute(decode:_:transaction:)","title":"func execute<TYPE>(decode: TYPE.Type, String, transaction: UUID?) async throws -> [TYPE]","type":"method"},{"path":"\/documentation\/postgresclientorm\/database\/execute(sqlquery:returning:transaction:)","title":"func execute<RET>(sqlQuery: Query<some FieldSubset>, returning: RET.Type, transaction: UUID?) async throws -> RET","type":"method"},{"path":"\/documentation\/postgresclientorm\/database\/execute(sqlquery:transaction:)","title":"func execute<TYPE>(sqlQuery: Query<TYPE>, transaction: UUID?) async throws -> [TYPE]","type":"method"},{"path":"\/documentation\/postgresclientorm\/database\/transaction(_:)","title":"func transaction((UUID) async throws -> Void) async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/database\/handler","title":"static let handler: Database","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/database\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/postgresclientorm\/database\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/postgresclientorm\/database\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/postgresclientorm\/database\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/database","title":"Database","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/migrations\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/migrations\/add(_:block:)","title":"func add(String, block: () async throws -> Void)","type":"method"},{"path":"\/documentation\/postgresclientorm\/migrations\/perform()","title":"func perform() async throws","type":"method"}],"path":"\/documentation\/postgresclientorm\/migrations","title":"Migrations","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/init(_:)-8ql6y","title":"init(DAD) throws","type":"init"},{"path":"\/documentation\/postgresclientorm\/parent\/init(_:)-mtp6","title":"init(DAD.IDType)","type":"init"},{"path":"\/documentation\/postgresclientorm\/parent\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/postgresclientorm\/parent\/init(row:)","title":"init(row: RowDecoder<Parent<DAD>.Columns>) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/id","title":"var id: DAD.IDType","type":"property"},{"path":"\/documentation\/postgresclientorm\/parent\/type","title":"var type: DAD.Type","type":"property"},{"path":"\/documentation\/postgresclientorm\/parent\/value","title":"var value: DAD?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/encode(row:)","title":"func encode(row: RowEncoder<Parent<DAD>.Columns>) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/parent\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/parent\/get(transaction:)","title":"func get(transaction: UUID?) async throws -> DAD","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/root","title":"case root","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/postgresclientorm\/parent\/columns\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresclientorm\/parent\/columns\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/columns\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/postgresclientorm\/parent\/columns\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/parent\/columns","title":"Parent.Columns","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/parent\/column(_:)","title":"static func column(Self.Columns) -> ColumnName","type":"method"}],"path":"\/documentation\/postgresclientorm\/parent\/fieldsubset-implementations","title":"FieldSubset Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/parent","title":"Parent","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/rowwriter\/encode(_:as:)","title":"func encode<T>(T, as: RowWriter.QueryType) throws -> Query<T>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/rowwriter\/querytype\/insert","title":"case insert","type":"case"},{"path":"\/documentation\/postgresclientorm\/rowwriter\/querytype\/update","title":"case update","type":"case"},{"path":"\/documentation\/postgresclientorm\/rowwriter\/querytype\/updatecolumns(_:)","title":"case updateColumns([ColumnName])","type":"case"}],"path":"\/documentation\/postgresclientorm\/rowwriter\/querytype","title":"RowWriter.QueryType","type":"enum"}],"path":"\/documentation\/postgresclientorm\/rowwriter","title":"RowWriter","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/fieldsubset\/columns","title":"Columns","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/fieldsubset\/init(row:)","title":"init(row: RowDecoder<Self.Columns>) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/fieldsubset\/encode(row:)","title":"func encode(row: RowEncoder<Self.Columns>) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/fieldsubset\/column(_:)","title":"static func column(Self.Columns) -> ColumnName","type":"method"}],"path":"\/documentation\/postgresclientorm\/fieldsubset","title":"FieldSubset","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tableobject\/idtype","title":"IDType","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tableobject\/id","title":"var id: Self.IDType?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tableobject\/calculcatedbhash()","title":"func calculcateDbHash() throws -> Int","type":"method"},{"path":"\/documentation\/postgresclientorm\/tableobject\/delete(transaction:)","title":"func delete(transaction: UUID?) async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/tableobject\/insert(transaction:)","title":"func insert(transaction: UUID?) async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/tableobject\/loadchildren(_:transaction:)","title":"func loadChildren<ChildType>(KeyPath<Self, Children<ChildType>>, transaction: UUID?) async throws -> [ChildType]","type":"method"},{"path":"\/documentation\/postgresclientorm\/tableobject\/update(transaction:)","title":"func update(transaction: UUID?) async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/tableobject\/updatecolumns(_:transaction:)","title":"func updateColumns(ColumnName..., transaction: UUID?) async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tableobject\/idcolumn","title":"static var idColumn: ColumnName","type":"property"},{"path":"\/documentation\/postgresclientorm\/tableobject\/tablename","title":"static var tableName: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tableobject\/count()","title":"static func count() -> Query<CountRetrieval>","type":"method"},{"path":"\/documentation\/postgresclientorm\/tableobject\/delete()","title":"static func delete() -> Query<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/tableobject\/fetch(id:transaction:)","title":"static func fetch(id: Self.IDType?, transaction: UUID?) async throws -> Self?","type":"method"},{"path":"\/documentation\/postgresclientorm\/tableobject\/select()","title":"static func select() -> Query<Self>","type":"method"}],"path":"\/documentation\/postgresclientorm\/tableobject","title":"TableObject","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/trackingdirty\/isdirty()","title":"func isDirty() throws -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/trackingdirty\/save(transaction:)","title":"func save(transaction: UUID?) async throws","type":"method"}],"path":"\/documentation\/postgresclientorm\/trackingdirty","title":"TrackingDirty","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/defaultvalue(_:)","title":"func defaultValue(String) -> ColumnDefinitation","type":"method"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/drop()","title":"func drop() throws -> ColumnDefinitation","type":"method"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/notnull()","title":"func notNull() -> ColumnDefinitation","type":"method"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/primatykey()","title":"func primatyKey() -> ColumnDefinitation","type":"method"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/references(table:column:ondelete:)","title":"func references(table: String, column: String, onDelete: ColumnDefinitation.DeleteAction) -> ColumnDefinitation","type":"method"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/rename(_:)","title":"func rename(ColumnName) throws -> ColumnDefinitation","type":"method"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/unique()","title":"func unique() -> ColumnDefinitation","type":"method"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/update(_:)","title":"func update(ColumnType) throws -> ColumnDefinitation","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/cascade","title":"case cascade","type":"case"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/noaction","title":"case noAction","type":"case"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/restrict","title":"case restrict","type":"case"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/setdefault","title":"case setDefault","type":"case"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/setnull","title":"case setNull","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/columndefinitation\/deleteaction","title":"ColumnDefinitation.DeleteAction","type":"enum"}],"path":"\/documentation\/postgresclientorm\/columndefinitation","title":"ColumnDefinitation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columnname\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/postgresclientorm\/columnname\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columnname\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/postgresclientorm\/columnname\/name","title":"var name: String","type":"property"}],"path":"\/documentation\/postgresclientorm\/columnname","title":"ColumnName","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/init(row:)","title":"init(row: RowDecoder<CountRetrieval.Columns>) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/id","title":"var id: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/encode(row:)","title":"func encode(row: RowEncoder<CountRetrieval.Columns>) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/idcolumn","title":"static var idColumn: ColumnName","type":"property"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/tablename","title":"static let tableName: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/count","title":"case count","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/postgresclientorm\/countretrieval\/columns\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/countretrieval\/columns","title":"CountRetrieval.Columns","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/column(_:)","title":"static func column(Self.Columns) -> ColumnName","type":"method"}],"path":"\/documentation\/postgresclientorm\/countretrieval\/fieldsubset-implementations","title":"FieldSubset Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/calculcatedbhash()","title":"func calculcateDbHash() throws -> Int","type":"method"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/delete(transaction:)","title":"func delete(transaction: UUID?) async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/insert(transaction:)","title":"func insert(transaction: UUID?) async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/loadchildren(_:transaction:)","title":"func loadChildren<ChildType>(KeyPath<Self, Children<ChildType>>, transaction: UUID?) async throws -> [ChildType]","type":"method"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/update(transaction:)","title":"func update(transaction: UUID?) async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/updatecolumns(_:transaction:)","title":"func updateColumns(ColumnName..., transaction: UUID?) async throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/count()","title":"static func count() -> Query<CountRetrieval>","type":"method"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/delete()","title":"static func delete() -> Query<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/fetch(id:transaction:)","title":"static func fetch(id: Self.IDType?, transaction: UUID?) async throws -> Self?","type":"method"},{"path":"\/documentation\/postgresclientorm\/countretrieval\/select()","title":"static func select() -> Query<Self>","type":"method"}],"path":"\/documentation\/postgresclientorm\/countretrieval\/tableobject-implementations","title":"TableObject Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/countretrieval","title":"CountRetrieval","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/results","title":"var results: QueryResults<TYPE>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/execute(transaction:)-6icq0","title":"func execute(transaction: UUID?) async throws -> Int","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/execute(transaction:)-7tthr","title":"func execute(transaction: UUID?) async throws -> [TYPE]","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/limit(_:)","title":"func limit(Int) -> Query<TYPE>","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/orderby(_:)","title":"func orderBy((ColumnName, Query<TYPE>.OrderBy)...) -> Query<TYPE>","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/orderby(_:direction:)","title":"func orderBy(ColumnName..., direction: Query<TYPE>.OrderBy) -> Query<TYPE>","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/where(_:)","title":"func `where`(() -> [SQLWhereItem]) throws -> Query<TYPE>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/orderby\/ascending","title":"case ascending","type":"case"},{"path":"\/documentation\/postgresclientorm\/query\/orderby\/descending","title":"case descending","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/orderby\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/orderby\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresclientorm\/query\/orderby\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/orderby\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/orderby\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/postgresclientorm\/query\/orderby\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/orderby\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/orderby\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/postgresclientorm\/query\/orderby\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/query\/orderby","title":"Query.OrderBy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/postgresclientorm\/query\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/stringinterpolation\/init(literalcapacity:interpolationcount:)","title":"init(literalCapacity: Int, interpolationCount: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/stringinterpolation\/appendinterpolation(_:)-60m8b","title":"func appendInterpolation((some PostgresThrowingDynamicTypeEncodable)?) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/stringinterpolation\/appendinterpolation(_:)-7rppm","title":"func appendInterpolation((some PostgresDynamicTypeEncodable)?)","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/stringinterpolation\/appendinterpolation(_:)-9azi8","title":"func appendInterpolation(some PostgresThrowingDynamicTypeEncodable) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/stringinterpolation\/appendinterpolation(_:)-tfr","title":"func appendInterpolation(some PostgresDynamicTypeEncodable)","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/stringinterpolation\/appendinterpolation(_:context:)","title":"func appendInterpolation(some PostgresThrowingDynamicTypeEncodable, context: PostgresEncodingContext<some PostgresJSONEncoder>) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/stringinterpolation\/appendinterpolation(unescaped:)","title":"func appendInterpolation(unescaped: String)","type":"method"},{"path":"\/documentation\/postgresclientorm\/query\/stringinterpolation\/appendliteral(_:)","title":"func appendLiteral(String)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/stringinterpolation\/stringliteraltype","title":"Query.StringInterpolation.StringLiteralType","type":"typealias"}],"path":"\/documentation\/postgresclientorm\/query\/stringinterpolation","title":"Query.StringInterpolation","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/init(stringinterpolation:)","title":"init(stringInterpolation: Query<TYPE>.StringInterpolation)","type":"init"}],"path":"\/documentation\/postgresclientorm\/query\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/postgresclientorm\/query\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/query\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/postgresclientorm\/query\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/query","title":"Query","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/queryresultiterator\/next()","title":"func next() async throws -> T?","type":"method"}],"path":"\/documentation\/postgresclientorm\/queryresultiterator","title":"QueryResultIterator","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/queryresults\/makeasynciterator()","title":"func makeAsyncIterator() -> QueryResultIterator<Type>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/queryresults\/asynciterator","title":"QueryResults.AsyncIterator","type":"typealias"},{"path":"\/documentation\/postgresclientorm\/queryresults\/element","title":"QueryResults.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/queryresults\/characters","title":"var characters: AsyncCharacterSequence<Self>","type":"property"},{"path":"\/documentation\/postgresclientorm\/queryresults\/lines","title":"var lines: AsyncLineSequence<Self>","type":"property"},{"path":"\/documentation\/postgresclientorm\/queryresults\/unicodescalars","title":"var unicodeScalars: AsyncUnicodeScalarSequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/queryresults\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/collect(upto:)","title":"func collect(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/collect(upto:into:)","title":"func collect(upTo: Int, into: inout ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/compactmap(_:)-2gyb7","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/compactmap(_:)-5oahh","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/decode(_:context:file:line:)-36w7","title":"func decode<each Column>((repeat each Column).Type, context: PostgresDecodingContext<some PostgresJSONDecoder>, file: String, line: Int) -> AsyncThrowingMapSequence<Self, (repeat each Column)>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/decode(_:context:file:line:)-7w15s","title":"func decode<Column>(Column.Type, context: PostgresDecodingContext<some PostgresJSONDecoder>, file: String, line: Int) -> AsyncThrowingMapSequence<Self, (Column)>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/decode(_:file:line:)-2izek","title":"func decode<each Column>((repeat each Column).Type, file: String, line: Int) -> AsyncThrowingMapSequence<Self, (repeat each Column)>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/decode(_:file:line:)-8slav","title":"func decode<Column>(Column.Type, file: String, line: Int) -> AsyncThrowingMapSequence<Self, (Column)>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/flatmap(_:)-1m6ol","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/flatmap(_:)-5yfdh","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/map(_:)-6dqp4","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/map(_:)-6v2f","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/max()","title":"func max() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/min()","title":"func min() async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/postgresclientorm\/queryresults\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/postgresclientorm\/queryresults\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/queryresults","title":"QueryResults","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/contains(_:)","title":"func contains(Key) -> Bool","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-14uhb","title":"func decode(UInt32?.Type, forKey: Key) throws -> UInt32?","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-1odym","title":"func decode(UInt16.Type, forKey: Key) throws -> UInt16","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-2s3qy","title":"func decode(UInt32.Type, forKey: Key) throws -> UInt32","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-2v4kl","title":"func decode(Int8?.Type, forKey: Key) throws -> Int8?","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-4tnra","title":"func decode<T>(T.Type, forKey: Key) throws -> T","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-56qrt","title":"func decode<T>(T?.Type, forKey: Key) throws -> T?","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-5qp1z","title":"func decode(UInt.Type, forKey: Key) throws -> UInt","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-5zlnp","title":"func decode(UInt?.Type, forKey: Key) throws -> UInt?","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-6x173","title":"func decode(UInt64.Type, forKey: Key) throws -> UInt64","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-7a4m2","title":"func decode(UInt64?.Type, forKey: Key) throws -> UInt64?","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-7edft","title":"func decode(Int8.Type, forKey: Key) throws -> Int8","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-7w3y9","title":"func decode(UInt16?.Type, forKey: Key) throws -> UInt16?","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-82z2b","title":"func decode<T>(T.Type, forKey: Key) throws -> T","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowdecoder\/decode(_:forkey:)-9dcr","title":"func decode<T>(T.Type, forKey: Key) throws -> T","type":"method"}],"path":"\/documentation\/postgresclientorm\/rowdecoder","title":"RowDecoder","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/rowencoder\/encode(_:forkey:)-1lp3y","title":"func encode((some PostgresEncodable)?, forKey: Key) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowencoder\/encode(_:forkey:)-39z4y","title":"func encode<T>(T, forKey: Key) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowencoder\/encode(_:forkey:)-3iv4m","title":"func encode(Int8?, forKey: Key) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowencoder\/encode(_:forkey:)-4x66x","title":"func encode<T>(T?, forKey: Key) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowencoder\/encode(_:forkey:)-8fdcp","title":"func encode<T>(T, forKey: Key) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowencoder\/encode(_:forkey:)-97tw3","title":"func encode(some PostgresEncodable, forKey: Key) throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowencoder\/encode(_:forkey:)-jrr7","title":"func encode(Int8, forKey: Key) throws","type":"method"}],"path":"\/documentation\/postgresclientorm\/rowencoder","title":"RowEncoder","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/rowreader\/decode(_:)","title":"func decode<T>(T.Type) throws -> T","type":"method"},{"path":"\/documentation\/postgresclientorm\/rowreader\/decoder(keyedby:)","title":"func decoder<Key>(keyedBy: Key.Type) -> RowDecoder<Key>","type":"method"}],"path":"\/documentation\/postgresclientorm\/rowreader","title":"RowReader","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/sqlwhereitem\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/postgresclientorm\/sqlwhereitem\/init(_:_:)","title":"init(String, PostgresEncodable?...)","type":"init"},{"path":"\/documentation\/postgresclientorm\/sqlwhereitem\/init(_:variables:)","title":"init(String, variables: [PostgresEncodable?])","type":"init"},{"path":"\/documentation\/postgresclientorm\/sqlwhereitem\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/sqlwhereitem\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/sqlwhereitem\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/postgresclientorm\/sqlwhereitem\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/sqlwhereitem\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/postgresclientorm\/sqlwhereitem\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/sqlwhereitem","title":"SQLWhereItem","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tabledefinition\/create()","title":"func create() async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/tabledefinition\/drop()","title":"func drop() async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/tabledefinition\/update()","title":"func update() async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tabledefinition\/operation\/alter","title":"case alter","type":"case"},{"path":"\/documentation\/postgresclientorm\/tabledefinition\/operation\/create","title":"case create","type":"case"},{"path":"\/documentation\/postgresclientorm\/tabledefinition\/operation\/drop","title":"case drop","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tabledefinition\/operation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresclientorm\/tabledefinition\/operation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/tabledefinition\/operation","title":"TableDefinition.Operation","type":"enum"}],"path":"\/documentation\/postgresclientorm\/tabledefinition","title":"TableDefinition","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/null","title":"let NULL: Bool?","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/and(_:)","title":"func And(() -> [SQLWhereItem]) -> SQLWhereItem","type":"func"},{"path":"\/documentation\/postgresclientorm\/or(_:)","title":"func Or(() -> [SQLWhereItem]) -> SQLWhereItem","type":"func"},{"path":"\/documentation\/postgresclientorm\/column(_:type:)","title":"func column(String, type: ColumnType) -> ColumnDefinitation","type":"func"},{"path":"\/documentation\/postgresclientorm\/table(_:columns:)","title":"func table(String, columns: () throws -> [ColumnDefinitation]) rethrows -> TableDefinition","type":"func"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/!=(_:_:)-2n4ft","title":"func != (ColumnName, some PostgresEncodable) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/!=(_:_:)-79kec","title":"func != (ColumnName, ColumnName) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/*=(_:_:)","title":"func *= (ColumnName, String) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/*=*(_:_:)","title":"func *=* (ColumnName, String) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/-_(_:_:)","title":"func -› (ColumnName, ColumnName) -> ColumnName","type":"op"},{"path":"\/documentation\/postgresclientorm\/=*(_:_:)","title":"func =* (ColumnName, String) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/==(_:_:)-2349g","title":"func == (ColumnName, (some PostgresEncodable)?) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/==(_:_:)-8mij4","title":"func == (ColumnName, ColumnName) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/=_(_:_:)","title":"func => <T>(String, T) -> (String, T)","type":"op"},{"path":"\/documentation\/postgresclientorm\/_(_:_:)-1912z","title":"func > (ColumnName, some PostgresEncodable) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/_(_:_:)-2a1sq","title":"func < (ColumnName, some PostgresEncodable) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/_(_:_:)-2oexu","title":"func < (ColumnName, ColumnName) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/_(_:_:)-3rvd3","title":"func > (ColumnName, ColumnName) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/_=(_:_:)-1bh5n","title":"func >= (ColumnName, some PostgresEncodable) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/_=(_:_:)-62mjp","title":"func <= (ColumnName, ColumnName) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/_=(_:_:)-7lqp1","title":"func <= (ColumnName, some PostgresEncodable) -> SQLWhereItem","type":"op"},{"path":"\/documentation\/postgresclientorm\/_=(_:_:)-8q2sj","title":"func >= (ColumnName, ColumnName) -> SQLWhereItem","type":"op"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/coding(key:)","title":"macro Coding(key: String)","type":"macro"},{"path":"\/documentation\/postgresclientorm\/codingkeysignored()","title":"macro CodingKeysIgnored()","type":"macro"},{"path":"\/documentation\/postgresclientorm\/column(name:)","title":"macro Column(name: String)","type":"macro"},{"path":"\/documentation\/postgresclientorm\/columnignored()","title":"macro ColumnIgnored()","type":"macro"},{"path":"\/documentation\/postgresclientorm\/columns(_:)","title":"macro Columns(KeyType)","type":"macro"},{"path":"\/documentation\/postgresclientorm\/tableobject(columns:table:idtype:idname:trackdirty:codable:)","title":"macro TableObject(columns: KeyType, table: String, idType: Any.Type, idName: String, trackDirty: Bool, codable: CodingKeyType)","type":"macro"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/saveabletableobject","title":"SaveableTableObject","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/arraybuilder\/buildarray(_:)","title":"static func buildArray([[T]]) -> [T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/arraybuilder\/buildblock(_:)","title":"static func buildBlock([T]...) -> [T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/arraybuilder\/buildeither(first:)","title":"static func buildEither(first: [T]) -> [T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/arraybuilder\/buildeither(second:)","title":"static func buildEither(second: [T]) -> [T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/arraybuilder\/buildexpression(_:)-2lgjc","title":"static func buildExpression(Void) -> [T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/arraybuilder\/buildexpression(_:)-7yxrk","title":"static func buildExpression(T) -> [T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/arraybuilder\/buildoptional(_:)","title":"static func buildOptional([T]?) -> [T]","type":"method"}],"path":"\/documentation\/postgresclientorm\/arraybuilder","title":"ArrayBuilder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/codingkeytype\/camelcase","title":"case camelCase","type":"case"},{"path":"\/documentation\/postgresclientorm\/codingkeytype\/none","title":"case none","type":"case"},{"path":"\/documentation\/postgresclientorm\/codingkeytype\/snakecase","title":"case snakeCase","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/codingkeytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresclientorm\/codingkeytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/codingkeytype","title":"CodingKeyType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columntype\/bool","title":"case bool","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/codable","title":"case codable","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/date","title":"case date","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/double","title":"case double","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/float","title":"case float","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/int","title":"case int","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/int16","title":"case int16","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/int64","title":"case int64","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/int8","title":"case int8","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/string","title":"case string","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/unknwon","title":"case unknwon","type":"case"},{"path":"\/documentation\/postgresclientorm\/columntype\/uuid","title":"case uuid","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columntype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columntype\/int32","title":"static var int32: ColumnType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columntype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresclientorm\/columntype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columntype\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columntype\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/postgresclientorm\/columntype\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columntype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/columntype\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/postgresclientorm\/columntype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/columntype","title":"ColumnType","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/dictionarybuilder\/buildarray(_:)","title":"static func buildArray([[String : T]]) -> [String : T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/dictionarybuilder\/buildblock(_:)","title":"static func buildBlock([String : T]...) -> [String : T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/dictionarybuilder\/buildeither(first:)","title":"static func buildEither(first: [String : T]) -> [String : T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/dictionarybuilder\/buildeither(second:)","title":"static func buildEither(second: [String : T]) -> [String : T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/dictionarybuilder\/buildexpression(_:)-1vs4v","title":"static func buildExpression((String, T?)) -> [String : T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/dictionarybuilder\/buildexpression(_:)-8g9wx","title":"static func buildExpression((String, T)) -> [String : T]","type":"method"},{"path":"\/documentation\/postgresclientorm\/dictionarybuilder\/buildoptional(_:)","title":"static func buildOptional([String : T]?) -> [String : T]","type":"method"}],"path":"\/documentation\/postgresclientorm\/dictionarybuilder","title":"DictionaryBuilder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/keytype\/camelcase","title":"case camelCase","type":"case"},{"path":"\/documentation\/postgresclientorm\/keytype\/snakecase","title":"case snakeCase","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/keytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/postgresclientorm\/keytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/keytype","title":"KeyType","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/postgresclientorm\/eventloop","title":"static var eventLoop: EventLoop","type":"property"},{"path":"\/documentation\/postgresclientorm\/postgresclientorm\/logger","title":"static var logger: Logger","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/postgresclientorm\/configure(logger:eventloop:)","title":"static func configure(logger: Logger, eventLoop: EventLoop)","type":"method"}],"path":"\/documentation\/postgresclientorm\/postgresclientorm","title":"PostgresClientORM","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tableobjecterror\/general(_:)","title":"case general(String)","type":"case"},{"path":"\/documentation\/postgresclientorm\/tableobjecterror\/unsupported","title":"case unsupported","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tableobjecterror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tableobjecterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/postgresclientorm\/tableobjecterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/tableobjecterror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/postgresclientorm\/tableobjecterror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/postgresclientorm\/tableobjecterror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/postgresclientorm\/tableobjecterror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/postgresclientorm\/tableobjecterror","title":"TableObjectError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/postgresclientorm\/postgresnio\/postgresconnection\/begintransaction()","title":"func beginTransaction() async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/postgresnio\/postgresconnection\/committransaction()","title":"func commitTransaction() async throws","type":"method"},{"path":"\/documentation\/postgresclientorm\/postgresnio\/postgresconnection\/rollbacktransaction()","title":"func rollbackTransaction() async throws","type":"method"}],"path":"\/documentation\/postgresclientorm\/postgresnio\/postgresconnection","title":"PostgresConnection","type":"extension"}],"path":"\/documentation\/postgresclientorm\/postgresnio","title":"PostgresNIO","type":"extension"}],"path":"\/documentation\/postgresclientorm","title":"PostgresClientORM","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}